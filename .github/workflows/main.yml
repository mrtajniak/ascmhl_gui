name: Build with PyInstaller

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: [self-hosted]  # Use your self-hosted runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force;
          [System.Net.ServicePointManager]::SecurityProtocol =
          [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      - name: Install Python 3.13.3
        run: |
          echo Installing Python 3.13.3
          choco install python --version=3.13.3 -y
          refreshenv

      - name: Verify Python and Pip
        run: |
          python --version
          python -m pip --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --uac-admin --noconsole ascmhl_gui.py

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}  # Create a unique tag for each release
          release_name: Build v${{ github.run_number }}
          body: |
            Automated release for build v${{ github.run_number }}.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ascmhl_gui.exe  # Path to the built .exe file
          asset_name: ascmhl_gui.exe       # Name of the file in the release
          asset_content_type: application/octet-stream
