name: Build with PyInstaller

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Chocolatey
        run: |
          Start-Process powershell -Verb runAs -ArgumentList '-NoProfile -ExecutionPolicy Bypass -Command "& {
            Set-ExecutionPolicy Bypass -Scope Process -Force;
            [System.Net.ServicePointManager]::SecurityProtocol =
            [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
            iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }"' -Wait

      - name: Install Python 3.13.3
        run: |
          Start-Process powershell -Verb runAs -ArgumentList '-NoProfile -ExecutionPolicy Bypass -Command "& {
            echo Installing Python 3.13.3;
            choco install python --version=3.13.3 -y;
            refreshenv
          }"' -Wait

      - name: Verify Python and Pip
        run: |
          Start-Process powershell -Verb runAs -ArgumentList '-NoProfile -ExecutionPolicy Bypass -Command "& {
            python --version;
            python -m pip --version
          }"' -Wait

      - name: Install dependencies
        run: |
          Start-Process powershell -Verb runAs -ArgumentList '-NoProfile -ExecutionPolicy Bypass -Command "& {
            python -m pip install --upgrade pip;
            python -m pip install -r requirements.txt;
            python -m pip install pyinstaller
          }"' -Wait

      - name: Build with PyInstaller
        run: |
          Start-Process powershell -Verb runAs -ArgumentList '-NoProfile -ExecutionPolicy Bypass -Command "& {
            pyinstaller --onefile --uac-admin --noconsole ascmhl_gui.py
          }"' -Wait

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Build v${{ github.run_number }}
          body: |
            Automated release for build v${{ github.run_number }}.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ascmhl_gui.exe
          asset_name: ascmhl_gui.exe
          asset_content_type: application/octet-stream
